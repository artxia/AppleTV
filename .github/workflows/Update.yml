name: 生成自用Apple TV直播列表

on:
  push:
    branches:
      - beta
    path:
      - 'start'
  release:
    types: [published]
  schedule:
    - cron: 0 4,16 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: true
  SOURCE: https://raw.githubusercontent.com/panda-mute/iptv/master/list.m3u
  SOURCE_NAME: panda.m3u
  SOURCE_Sason: http://tv.sason.xyz/new.m3u
  SOURCE_Sason_NAME: sason.m3u
  SOURCE_boye: http://tv.boye.ml/iptv/tv.m3u
  SOURCE_boye_NAME: boye.m3u
  SOURCE_panda: https://raw.githubusercontent.com/panda-mute/iptv/master/list.m3u
  SOURCE_panda_NAME: panda.m3u
  SOURCE_homenet6: https://homenet6.github.io/list.m3u
  SOURCE_homenet6_NAME: homenet6.m3u
  GROUP_NAME_CCTV: 央视频道
  GROUP_NAME_SATT: 卫视频道
  GROUP_NAME_HK: 香港频道
  GROUP_NAME_JP: 日本频道
  GROUP_NAME_EN: 英文频道
  GROUP_NAME_SCI: 科教记录
  GROUP_NAME_TW: 台湾频道
  GROUP_NAME_MO: 澳门频道
  HKTW_ADD: false

jobs:
  GenerateList:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "::set-output name=DATE::$(date +'%Y-%m-%d')"
    
    - name: 获取最新源
      run : |
        wget $SOURCE -O $SOURCE_NAME
    
    - name: 国内频道
      run : |
        awk '
        {
          if($0~/\#EXTM3U/) {print $0};
          if($0~/\#央视|\#卫视/) {print $0};
          if($0~/央视频道"|卫视频道"/ && $0!~/CHC|移动|联通/) {m=NR; n=NR+1};
          if(m<=NR && NR<=n) {
            gsub("央视频道","'"$GROUP_NAME_CCTV"'");
            gsub("央视频道","'"$GROUP_NAME_SATT"'");
            gsub("高清","")
            if($0~/深圳/) {gsub("tvg-id=\"[0-9]{1,2}\"","tvg-id=\"26\"")};
            # if($0~/新闻/) {
              # print $0;
              # getline; ysp=$0;
              # gsub("2000204603","2000296203",ysp);
            # };
            # if($0~/湖南卫视/) {
              # print $0;
              # getline;
              # print ysp;
              # next;
            # };
            print $0;
          };
        }
        ' $SOURCE_NAME>Source/China.m3u

    - name: 重新排序国内频道并更换透明图标
      run : |
        awk -F'"' '
        {
          info=$0;
          name=$4;
          print info;
          if(info~/EXTINF/ && info!~/科教/) {
            close("Source/China.m3u");
            cmd="awk '\''/"name"/{getline;print}'\'' Source/China.m3u";
            cmd | getline churl;
            print churl;
            close(cmd);
          };
          gsub("group-title=\"..央视.*\"","group-title=\"'"$GROUP_NAME_CCTV"'\"");
          gsub("group-title=\"..卫视.*\"","group-title=\"'"$GROUP_NAME_SATT"'\"");
        }
        ' ChannelList/China.list>China.m3u

    - name: 外文频道
      run : |
        # 日本频道
        awk '
        {
          gsub("group-title=\"..日本.*\"","group-title=\"'"$GROUP_NAME_JP"'\"");
          print $0;
        }
        ' ChannelList/Japan.list>Japantmp1.m3u

        cat Japantmp*.m3u > Japan.m3u

        # 英文频道
        awk '
        {
          gsub("group-title=\"..英文.*\"","group-title=\"'"$GROUP_NAME_EN"'\"");
          print $0;
        }
        ' ChannelList/English.list>English.m3u

    - name: 科学记录频道
      run : |
        awk '
        {
          gsub("group-title=\"..科教.*\"","group-title=\"'"$GROUP_NAME_SCI"'\"");
          print $0;
        }
        ' ChannelList/Sciences.list>Sciencestmp1.m3u

        cat Sciencestmp*.m3u > Sciences.m3u

    - name: 生成AppleTV总列表
      run : cat China.m3u Japan.m3u English.m3u > IPTV.m3u
    
    - name: 删除临时文件
      run : |
        rm $SOURCE_NAME
        rm *tmp*.m3u
        ls
    
    - name: 判断是否有变更
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "::set-output name=STATUS::"nochange""
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "::set-output name=STATUS::"change""
        fi
    
    - name: 合并到仓库
      run : |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin master
        fi

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendmessage?chat_id=${{ secrets.TELEGRAM_TO }}&text=AppleTV电视频道已更新!
        fi  
      
    - name: 微信推送
      if: env.WECHAT_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl https://sc.ftqq.com/${{secrets.ServerChan}}.send?text=AppleTV电视频道已更新!
        fi
        
